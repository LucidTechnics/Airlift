<!--
 Copyright 2010, Lucid Technics, LLC.

 Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
 except in compliance with the License. You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in
 writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 specific language governing permissions and limitations under the License.
-->
<project name="quality-build" default="findbugs" basedir=".">

	<description>Quality Build File</description>
  
	<import file="build.xml"/>
	
	<property file="quality.properties" />
	
  	<property name="quality.lib" location="quality-lib"/>
  
	
	
    <!-- =================================================================== -->
    <!-- Find Bugs - Static Code Analysis                                    -->
    <!-- =================================================================== -->

    <path id="findbugs.class.path">
        <fileset dir="${quality.lib}/findbugs"/>
    </path>

    <property name="findbugs.class.path" refId="findbugs.class.path"/>
    <target name="findbugs" depends="jar" description="Findbugs Static Code Analysis">
        <taskdef name="findbugs" classpathref="findbugs.class.path" classname="edu.umd.cs.findbugs.anttask.FindBugsTask"/>
        <findbugs home="${quality.lib}/findbugs" output="xml" outputFile="${findbugs.results.file}">
            <auxClasspath path="${build.class.path}" />
            <sourcePath path="${src.java}" />
            <sourcePath path="${src.test}" />
            <class location="${dist}/lib"/>
        </findbugs>
    </target>  
    
    <target name="findbugs-html" depends="jar" description="Findbugs Static Code Analysis">
        <taskdef name="findbugs" classpathref="findbugs.class.path" classname="edu.umd.cs.findbugs.anttask.FindBugsTask"/>
        <findbugs home="${quality.lib}/findbugs" output="xml" outputFile="${findbugs.results.file}">
            <auxClasspath path="${build.class.path}" />
            <sourcePath path="${src.java}" />
            <sourcePath path="${src.test}" />
            <class location="${dist}/lib"/>
        </findbugs>
    </target>  
    
    <!-- =================================================================== -->
    <!-- PMD Task - Code Analysis                                            -->
    <!-- =================================================================== -->

	<path id="pmd.class.path">
	  <fileset dir="${quality.lib}/pmd"/>
	</path>

    <target name="pmd" depends="compile, javadoc" description="PMD Code Analysis">
        <taskdef name="pmd" classpathref="pmd.class.path" classname="net.sourceforge.pmd.ant.PMDTask"/>

        <pmd shortFilenames="true" rulesetfiles="${pmd.ruleset.file}">
            <formatter type="summaryhtml" toFile="${pmd.report.html}" linkPrefix="${pmd.link.prefix}"/>
            <formatter type="xml" toFile="${pmd.report.xml}" linkPrefix="${pmd.link.prefix}"/>
            <fileset dir="${src.java}">
                <include name="**/*.java"/>
            </fileset>
            <fileset dir="${src.test}">
                <include name="**/*.java"/>
            </fileset>
        </pmd>
    </target>

    <!-- =================================================================== -->
    <!-- PMD - Cut/Paste Detector                                            -->
    <!-- =================================================================== -->
    <target name="cpd" depends="compile" description="Copy/Paste Detector">
        <taskdef name="cpd" classpathref="pmd.class.path" classname="net.sourceforge.pmd.cpd.CPDTask" />
        <cpd minimumTokenCount="100" format="xml" outputFile="${cpd.report.xml}">
            <fileset dir="${src.java}">
                <include name="**/*.java"/>
            </fileset>
            <fileset dir="${src.test}">
                <include name="**/*.java"/>
            </fileset>
        </cpd>
        <xslt in="${cpd.report.xml}" style="${cpd.xslt}" out="${cpd.report.html}"/>
    </target>
    
    
</project>